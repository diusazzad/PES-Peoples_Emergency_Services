//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use '../../focus/focus-ring';
@use '../../motion/animation';
@use '../../ripple/ripple';
@use '../../sass/theme';
@use '../../tokens';
// go/keep-sorted end

$_md-sys-motion: tokens.md-sys-motion-values();

@mixin theme($tokens) {
  $tokens: theme.validate-theme(tokens.md-comp-radio-button-values(), $tokens);
  $tokens: theme.create-theme-vars($tokens, 'radio');

  @include theme.emit-theme-vars($tokens);
}

@mixin styles() {
  $tokens: tokens.md-comp-radio-button-values();
  $tokens: theme.create-theme-vars($tokens, 'radio');

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: #{$value};
    }

    @include ripple.theme(
      (
        focus-color: var(--_unselected-focus-state-layer-color),
        focus-opacity: var(--_unselected-focus-state-layer-opacity),
        hover-color: var(--_unselected-hover-state-layer-color),
        hover-opacity: var(--_unselected-hover-state-layer-opacity),
        pressed-color: var(--_unselected-pressed-state-layer-color),
        pressed-opacity: var(--_unselected-pressed-state-layer-opacity),
      )
    );

    @include focus-ring.theme(
      (
        'outward-offset': -2px,
      )
    );

    display: inline-flex;
    height: 48px;
    position: relative;
    vertical-align: top; // Fix extra space when placed inside display: block
    width: 48px;
    // Remove highlight color for mobile Safari
    -webkit-tap-highlight-color: transparent;
  }

  :host([checked]) {
    @include ripple.theme(
      (
        focus-color: var(--_selected-focus-state-layer-color),
        focus-opacity: var(--_selected-focus-state-layer-opacity),
        hover-color: var(--_selected-hover-state-layer-color),
        hover-opacity: var(--_selected-hover-state-layer-opacity),
        pressed-color: var(--_selected-pressed-state-layer-color),
        pressed-opacity: var(--_selected-pressed-state-layer-opacity),
      )
    );
  }

  input,
  md-ripple,
  .icon {
    inset: 0;
    margin: auto;
    position: absolute;
  }

  input {
    appearance: none;
    outline: none;
  }

  md-ripple {
    border-radius: 50%;
    height: var(--_state-layer-size);
    width: var(--_state-layer-size);
  }

  .icon {
    fill: var(--_unselected-icon-color);
    height: var(--_icon-size);
    width: var(--_icon-size);
  }

  .outer.circle {
    // Outline color enter/exit transition
    transition: fill 50ms linear;
  }

  .inner.circle {
    opacity: 0;
    transform-origin: center;
    transition: opacity 50ms linear;
  }

  :host([checked]) .icon {
    fill: var(--_selected-icon-color);
  }

  :host([checked]) .inner.circle {
    animation: inner-circle-grow 300ms
      map.get($_md-sys-motion, easing-emphasized-decelerate);
    opacity: 1;
  }

  @keyframes inner-circle-grow {
    from {
      transform: scale(0);
    }
    to {
      transform: scale(1);
    }
  }

  // Don't animate when disabled
  :host([disabled]) .circle {
    animation-duration: 0s;
    transition-duration: 0s;
  }

  :host(:hover) .icon {
    fill: var(--_unselected-hover-icon-color);
  }

  :host(:focus-within) .icon {
    fill: var(--_unselected-focus-icon-color);
  }

  :host(:active) .icon {
    fill: var(--_unselected-pressed-icon-color);
  }

  :host([disabled]) .icon {
    fill: var(--_disabled-unselected-icon-color);
    opacity: var(--_disabled-unselected-icon-opacity);
  }

  :host([checked]:hover) .icon {
    fill: var(--_selected-hover-icon-color);
  }

  :host([checked]:focus-within) .icon {
    fill: var(--_selected-focus-icon-color);
  }

  :host([checked]:active) .icon {
    fill: var(--_selected-pressed-icon-color);
  }

  :host([checked][disabled]) .icon {
    fill: var(--_disabled-selected-icon-color);
    opacity: var(--_disabled-selected-icon-opacity);
  }
}
