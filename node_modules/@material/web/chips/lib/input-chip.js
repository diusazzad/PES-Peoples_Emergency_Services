/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { __decorate } from "tslib";
import { html, nothing } from 'lit';
import { property } from 'lit/decorators.js';
import { ripple } from '../../ripple/directive.js';
import { Chip } from './chip.js';
import { renderRemoveButton } from './trailing-actions.js';
/**
 * An input chip component.
 */
export class InputChip extends Chip {
    constructor() {
        super(...arguments);
        this.avatar = false;
        this.href = '';
        this.target = '';
        this.removeOnly = false;
        this.selected = false;
    }
    get focusFor() {
        if (this.href) {
            return 'link';
        }
        if (this.removeOnly) {
            return 'text';
        }
        return 'button';
    }
    get rippleDisabled() {
        // Link chips cannot be disabled
        return !this.href && this.disabled;
    }
    getContainerClasses() {
        return {
            ...super.getContainerClasses(),
            avatar: this.avatar,
            // Link chips cannot be disabled
            disabled: !this.href && this.disabled,
            selected: this.selected,
        };
    }
    renderPrimaryAction() {
        const { ariaLabel } = this;
        if (this.href) {
            return html `
        <a class="primary action"
          id="link"
          aria-label=${ariaLabel || nothing}
          href=${this.href}
          target=${this.target || nothing}
          ${ripple(this.getRipple)}
        >${this.renderContent()}</a>
      `;
        }
        if (this.removeOnly) {
            return html `
        <span class="primary action"
          id="text"
          aria-label=${ariaLabel || nothing}
        >${this.renderContent()}</span>
      `;
        }
        return html `
      <button class="primary action"
        id="button"
        aria-label=${ariaLabel || nothing}
        ?disabled=${this.disabled}
        type="button"
        ${ripple(this.getRipple)}
      >${this.renderContent()}</button>
    `;
    }
    renderTrailingAction() {
        return renderRemoveButton({ disabled: this.disabled });
    }
}
__decorate([
    property({ type: Boolean })
], InputChip.prototype, "avatar", void 0);
__decorate([
    property()
], InputChip.prototype, "href", void 0);
__decorate([
    property()
], InputChip.prototype, "target", void 0);
__decorate([
    property({ type: Boolean, attribute: 'remove-only' })
], InputChip.prototype, "removeOnly", void 0);
__decorate([
    property({ type: Boolean })
], InputChip.prototype, "selected", void 0);
//# sourceMappingURL=input-chip.js.map