//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use '../../ripple/ripple';
@use '../../tokens';
// go/keep-sorted end

$_md-sys-motion: tokens.md-sys-motion-values();
$_easing-standard: map.get($_md-sys-motion, 'easing-standard');

@mixin styles() {
  .handle-container {
    position: relative;
    // this easing is custom to perform the "overshoot" animation
    transition: margin 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
    display: flex;
  }

  $margin: calc(var(--_track-width) - var(--_track-height));

  .switch--selected .handle-container {
    margin-inline-start: $margin;
  }

  .switch--unselected .handle-container {
    margin-inline-end: $margin;
  }

  .switch:disabled .handle-container {
    transition: none;
  }

  .handle {
    // Handle shape
    border-start-start-radius: var(--_handle-shape-start-start);
    border-start-end-radius: var(--_handle-shape-start-end);
    border-end-end-radius: var(--_handle-shape-end-end);
    border-end-start-radius: var(--_handle-shape-end-start);
    height: var(--_unselected-handle-height);
    width: var(--_unselected-handle-width);

    transform-origin: center;
    transition-property: height, width;
    transition-duration: 250ms, 250ms;
    transition-timing-function: $_easing-standard, $_easing-standard;
    z-index: 0;
  }

  .handle::before {
    content: '';
    display: flex;
    inset: 0;
    position: absolute;
    border-radius: inherit;
    box-sizing: border-box;
    transition: background-color 67ms linear;
  }

  .switch:disabled .handle,
  .switch:disabled .handle::before {
    transition: none;
  }

  .switch--selected .handle {
    height: var(--_selected-handle-height);
    width: var(--_selected-handle-width);
  }

  .handle.with-icon {
    height: var(--_with-icon-handle-height);
    width: var(--_with-icon-handle-width);
  }

  .switch--selected:enabled:active .handle,
  .switch--unselected:enabled:active .handle {
    height: var(--_pressed-handle-height);
    width: var(--_pressed-handle-width);
    transition-timing-function: linear;
    transition-duration: 100ms;
  }

  .switch--selected .handle::before {
    background-color: var(--_selected-handle-color);
  }

  .switch--selected:hover .handle::before {
    background-color: var(--_selected-hover-handle-color);
  }

  .switch--selected:focus-within .handle::before {
    background-color: var(--_selected-focus-handle-color);
  }

  .switch--selected:active .handle::before {
    background-color: var(--_selected-pressed-handle-color);
  }

  .switch--selected:disabled .handle::before {
    background-color: var(--_disabled-selected-handle-color);
    opacity: var(--_disabled-selected-handle-opacity);
  }

  .switch--unselected .handle::before {
    background-color: var(--_unselected-handle-color);
  }

  .switch--unselected:hover .handle::before {
    background-color: var(--_unselected-hover-handle-color);
  }

  .switch--unselected:focus-within .handle::before {
    background-color: var(--_unselected-focus-handle-color);
  }

  .switch--unselected:active .handle::before {
    background-color: var(--_unselected-pressed-handle-color);
  }

  .switch--unselected:disabled .handle::before {
    background-color: var(--_disabled-unselected-handle-color);
    opacity: var(--_disabled-unselected-handle-opacity);
  }

  .ripple {
    position: absolute;
    display: inline-flex;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: var(--_state-layer-size);
    width: var(--_state-layer-size);
  }

  md-ripple {
    border-radius: var(--_state-layer-shape);
  }

  .switch--selected .ripple {
    @include ripple.theme(
      (
        'hover-color': var(--_selected-hover-state-layer-color),
        'focus-color': var(--_selected-focus-state-layer-color),
        'pressed-color': var(--_selected-pressed-state-layer-color),
        'hover-opacity': var(--_selected-hover-state-layer-opacity),
        'focus-opacity': var(--_selected-focus-state-layer-opacity),
        'pressed-opacity': var(--_selected-pressed-state-layer-opacity),
      )
    );
  }

  .switch--unselected .ripple {
    @include ripple.theme(
      (
        'hover-color': var(--_unselected-hover-state-layer-color),
        'focus-color': var(--_unselected-focus-state-layer-color),
        'pressed-color': var(--_unselected-pressed-state-layer-color),
        'hover-opacity': var(--_unselected-hover-state-layer-opacity),
        'focus-opacity': var(--_unselected-focus-state-layer-opacity),
        'pressed-opacity': var(--_unselected-pressed-state-layer-opacity),
      )
    );
  }
}
