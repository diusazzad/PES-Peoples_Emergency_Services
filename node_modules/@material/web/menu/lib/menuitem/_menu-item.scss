//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:list';
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use '../../../list/list-item';
@use '../../../ripple/ripple';
@use '../../../sass/theme';
@use '../../../tokens';
// go/keep-sorted end

@mixin theme($tokens) {
  $tokens: theme.validate-theme(tokens.md-comp-menu-item-values(), $tokens);

  @each $token, $value in $tokens {
    @if $value {
      --md-menu-item-#{$token}: #{$value};
    }
  }
}

@mixin styles() {
  $tokens: tokens.md-comp-menu-item-values();

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: var(--md-menu-item-#{$token}, #{$value});
    }

    @include list-item.theme(
      (
        'list-item-container-color': var(--_list-item-container-color),
      )
    );
  }

  .list-item {
    :host([selected]) & {
      background-color: var(--_list-item-selected-container-color);
    }
  }

  // Set the ripple opacity to 0 if there is a submenu that is hovered.
  .list-item:has(.submenu:hover) {
    // Have to use ripple theme directly because :has selector in this case does
    // not work in this case with the :has selector, thus we cannot override the
    // custom props set in :host
    @include ripple.theme(
      (
        hover-opacity: 0,
      )
    );
  }
}
